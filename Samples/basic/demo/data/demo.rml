<rml>
<head>
<link type="text/template" href="../../../assets/window.rml"/>
<title>Demo Sample</title>
<style>
body.window
{
	width: 1300px;
	height: 750px;
	min-width: 950px;
	min-height: 300px;
	max-width: -1px;
	max-height: -1px;
}
div#title_bar div#icon
{
	display: none;
}
div#content
{ 
	position: relative; 
}
tabset
{
	display: block;
}
tabs
{
    display: block;
	position: fixed;
	width: 100%;
	clip: none;
	pointer-events: none;
	text-align: right;
	padding-right: 10px;
}
tab
{
	position: relative;
    width: 100px;
	pointer-events: auto;
	padding: 0px 20px;
	line-height: 40px;
	top: -47px;
	z-index: 2;
	
	font-size: 16px;
	color: #ddd;
	text-align: center;
	
	decorator: tiled-horizontal( datagridheader-l, datagridheader-c, datagridheader-r );
	image-color: #cffc;
}
tab:hover
{
	image-color: #fffe;
	color: #fff;
}
tab:active, tab:selected
{
	image-color: #fff;
	color: #fff;
}
panels
{
    display: block;
}
panel
{
    display: block;
	padding: 30px;
	margin-left: auto;
	margin-right: auto;
}
h1
{
	margin: 1.4em 0 0.7em;
}
.minipanel
{
	max-width: 500px;
}
p.emojis
{
	font-size: 35px;
	color: #b33;
}
.clickable
{ 
	cursor: pointer;
}
button:focus {
	image-color: #0ff;
}


/***  Decorators  ***/

#decorators > div {
	margin-bottom: 14px;
}
#decorators p {
	text-align: center;
}
#decorators button.big
{
	width: 220px;
	height: 120px;
	line-height: 120px;
}
#decorators button.ninepatch
{
	/* The edges will be scaled by the current dp-ratio. */
	decorator: ninepatch(button, button-inner, 1.0);
}
#decorators button.ninepatch:hover
{
	decorator: ninepatch(button-hover, button-inner-hover);
}
#decorators button.ninepatch:active
{
	decorator: ninepatch(button-active, button-inner-active);
}
#decorators button.gradient
{
	decorator: gradient( vertical #415857 #5990A3 );
	border: 2px #415857;
	margin-right: 12px;
}
#decorators button.gradient.horizontal
{
	decorator: gradient( horizontal #DB6565 #F1B58A );
	border: 2px #DB6565;
}
#decorators button.gradient:hover
{
	border-color: #F9EFA3;
}
.image-fit { text-align: center; }
.image-fit > div
{
	display: inline-block;
	width: 120px;
	height: 50px;
	padding: 5px 10px;
	margin-right: 20px;
	background-color: #c665;
	border: 1px #666;
	text-align: left;
	font-effect: shadow( 1px 1px #333 );
}
.image-fit.small > div
{
	width: 40px;
	height: 20px;
	padding: 0;
	margin-left: 40px;
	margin-right: 80px;
}
.align-default     { decorator: image( icon-invader scale-none             ); }
.align-right       { decorator: image( icon-invader scale-none right       ); }
.align-left-bottom { decorator: image( icon-invader scale-none left bottom ); }
.align-percent     { decorator: image( icon-invader scale-none 70% 30%     ); }
.align-pixel       { decorator: image( icon-invader scale-none 100px -15px ); }
.fit-fill       { decorator: image( icon-invader fill       ); }
.fit-contain    { decorator: image( icon-invader contain    ); }
.fit-cover      { decorator: image( icon-invader cover      ); }
.fit-scale-none { decorator: image( icon-invader scale-none ); }
.fit-scale-down { decorator: image( icon-invader scale-down ); }
.transform.fit-fill       { decorator: image( icon-invader rotate-180 fill       ); }
.transform.fit-contain    { decorator: image( icon-invader rotate-180 contain    ); }
.transform.fit-cover      { decorator: image( icon-invader rotate-180 cover      ); }
.transform.fit-scale-none { decorator: image( icon-invader rotate-180 scale-none ); }
.transform.fit-scale-down { decorator: image( icon-invader rotate-180 scale-down ); }


/***  Animations  ***/

#tweening_area
{
	position: relative;
	margin: 30px auto;
	width: 400px;
	height: 250px;
	border: 1px #777;
	background-color: #ccc2;
	cursor: cross;
}
#tweening_area img
{
	position: absolute;
	cursor: pointer;
	transform: translate(190px, 100px);
}

#transition
{
	margin: 20px auto 30px;
	width: 400px;
	height: 250px;
	border: 1px #777;
	background-color: #ccc2;
	position: relative;
	overflow: hidden;
}
#transition > img
{
	position: absolute;
	top: -50px;
	left: 50%;
	margin-left: -32px;
	transition: top left 0.6s back-out, opacity 0.4s, image-color 0.4s 0.3s quadratic-out;
	opacity: 0;
	image-color: #fff;
}
#transition:hover > img
{
	top: 50px;
	opacity: 1;
	image-color: #f61;
}
#transition:hover .alien1 { left: 30%; top: 75px; }
#transition:hover .alien3 { left: 70%; top: 75px; }
#transition .defender
{ 
	transition: image-color 0.3s 0.0s quadratic-out;
	position: absolute;
	left: -44px;
	top: 150px; opacity: 1; 
}
#transition:hover .defender { image-color: #acf;  }
#transition .ray { 
	transition: top 0.4s back-out, opacity 0.4s cubic-in;
	position: absolute;
	top: -130px;
	left: 50%;
	opacity: 0;
	margin-left: -20px;
	width: 40px;
	height: 200px;
	decorator: gradient( vertical #daf0 #fef6 );
}
#transition:hover .ray
{
	opacity: 1;
	top: 0px;
}

@keyframes cube-rotate {
	from { transform: rotate3d(1, -1, 0.3, 0deg);	}
	to { transform: rotate3d(1, -1, 0.3, 360deg);	}
}

.cube_container {
	width: 200px;
	height: 200px;
	margin: 20px auto;
	perspective: 500px;
}
.cube {
	width: 100%;
	height: 100%;
	position: relative;
	animation: 3s cube-rotate infinite back-in-out;
}
.face {
	left: 50px; top: 50px;
	display: block;
	position: absolute;
	width: 100px;
	height: 100px;
	line-height: 100px;
	font-size: 60px;
	color: white;
	text-align: center;
}
/* Define each face based on direction */
.face.front {
	background: rgba(0, 0, 0, 160);
	transform: translateZ(50px);
}
.face.front:hover {
	background: rgba(255, 255, 0, 120);
}
.face.back {
	background: rgba(0, 255, 0, 255);
	color: black;
	transform: rotateY(180deg) translateZ(50px);
}
.face.right {
	background: rgba(196, 0, 0, 200);
	transform: rotateY(90deg) translateZ(50px);
}
.face.left {
	background: rgba(0, 0, 196, 200);
	transform: rotateY(-90deg) translateZ(50px);
}
.face.top {
	background: rgba(196, 196, 0, 200);
	transform: rotateX(90deg) translateZ(50px);
}
.face.bottom {
	background: rgba(196, 0, 196, 200);
	transform: rotateX(-90deg) translateZ(50px);
}


/***  Forms  ***/

form
{
	display: block;
	text-align: left;
}
form input, form select { margin-left: 0; }
form h2 
{
	display: block;
	font-size: 16px;
	font-weight: bold;
	margin-top: 8px;
}
#rating {
	display: inline-block;
	width: 40px;
	padding-left: 1em;
}
#rating_emoji { 
	color: #ffd40f;
	font-size: 1.7em;
}
#form_output 
{
	border: 1px #666;
	font-size: 0.9em;
	background-color: #ddd;
	min-height: 30px;
	margin-top: 10px;
	padding: 5px 8px;
	color: #222;
	white-space: pre-wrap;
	overflow: hidden auto;
}

#controls textarea 
{
	font-size: 18px;
	font-effect: outline(2px #006600);
	color: #ddd;
}


/***  Sandbox  ***/

#sandbox
{
	position: absolute;
	top: 20px;
	right: 30px;
	bottom: 20px;
	left: 30px;
	padding: 0;
}
#sandbox textarea
{
	font-size: 13px;
	color: #222;
	font-family: rmlui-debugger-font;
	width: 50%;
	height: 40%;
}
#sandbox_target 
{
	background-color: #fff;
	border: 1px #000;
	height: 55%;
	margin-top: 15px;
	color: #000;
	text-align: left;
	position: relative;
}
#sandbox_rml_source { margin-left: -5px; }
#sandbox_rcss_source { margin-left: 5px; }
</style>
</head>

<body template="window">

<tabset id="menu">
<tab>Welcome</tab>
<panel id="welcome" class="minipanel">
	<p class="emojis" style="margin-top: 1.8em;">RmlUi üòç</p>
	<p>Have fun fiddling about in this (incomplete) demo.</p>
	<p>Press 'F8' to open up the debugger.</p>
	<p class="emojis" style="margin-top: 1em;">üéâ</p>
</panel>
<tab>Decorators</tab>
<panel id="decorators" style="max-width: 850px;">
	<div>
		<button>Image</button>
		<button class="ninepatch">Ninepatch</button>
	</div>
	<div>
		<button class="big">Image</button>
		<button class="big ninepatch">Ninepatch</button>
		<p>The ninepatch decorator scales the background without blurring the texture, keeping the corners fixed.</p>
	</div>
	<div>	
		<button class="gradient">Gradient</button>
		<button class="gradient horizontal">Gradient</button>
	</div>
	<h1>Image decorator alignment modes</h1>
	<div class="image-fit">
		<div class="align-default" style="font-style: italic;">default</div>
		<div class="align-right">right</div>
		<div class="align-left-bottom">left bottom</div>
		<div class="align-percent">70% 30%</div>
		<div class="align-pixel">100px -15px</div>
		<p style="margin: 0.3em 0 0 0;">Using fit mode 'scale-none'.</p>
	</div>

	<h1>Image decorator fit modes</h1>
	<div class="image-fit">
		<div class="fit-fill">fill</div>
		<div class="fit-contain">contain</div>
		<div class="fit-cover">cover</div>
		<div class="fit-scale-none">scale-none</div>
		<div class="fit-scale-down">scale-down</div>
	</div>
	<div class="image-fit small">
		<div class="fit-fill"></div>
		<div class="fit-contain"></div>
		<div class="fit-cover"></div>
		<div class="fit-scale-none"></div>
		<div class="fit-scale-down"></div>
	</div>
	<div class="image-fit small">
		<div class="transform fit-fill"></div>
		<div class="transform fit-contain"></div>
		<div class="transform fit-cover"></div>
		<div class="transform fit-scale-none"></div>
		<div class="transform fit-scale-down"></div>
	</div>
	
	<h1>Image elements</h1>
	<img src="../../../assets/high_scores_defender.tga" class="clickable" onclick="change_color"/>
	<img sprite="icon-game" style="vertical-align: 10px;"/>
	<img src="../../../assets/high_scores_defender.tga" style="image-color: #fc5;" rect="0 0 64 64"/>
	<img src="../../../assets/high_scores_defender.tga" style="image-color: #9c5;" rect="64 0 64 64"/>
	<p style="text-align: left;">While they are described here, `img` elements are separate from decorators. They can be declared as in html. Additionally, a 'rect' attribute can be used to crop the image. In addition to images, the element can also display sprites declared in a sprite sheet.</p>
</panel>
<tab>Animations</tab>
<panel id="animations" class="minipanel">
	
	<h1>Transitions</h1>
	<p>Hover over the following to see an animation performed by the transition property in RCSS.</p>
	<div id="transition">
		<img class="alien alien1" src="../../../assets/high_scores_alien_1.tga"/>
		<img class="alien alien2" src="../../../assets/high_scores_alien_2.tga"/>
		<img class="alien alien3" src="../../../assets/high_scores_alien_3.tga"/>
		<div class="ray"><img class="defender" src="../../../assets/high_scores_defender.tga"/></div>
		<div style="height: 110%;"/>
	</div>
	
	<h1>Tweening functions</h1>
	<p>Set animation parameters below and click on the background or the flag.</p>
	<div id="tweening_area" onclick="move_child">
		<img sprite="icon-flag" onclick="change_color"/>
	</div>
	<select name="tween_function" onchange="tween_function">
		<option value="linear" selected>Tweening function</option>
		<option value="back">Back</option>
		<option value="bounce">Bounce</option>
		<option value="circular">Circular</option>
		<option value="cubic">Cubic</option>
		<option value="elastic">Elastic</option>
		<option value="exponential">Exponential</option>
		<option value="linear">Linear</option>
		<option value="quadratic">Quadratic</option>
		<option value="quartic">Quartic</option>
		<option value="quintic">Quintic</option>
		<option value="sine">Sine</option>
	</select>
	<select name="tween_direction" onchange="tween_direction">
		<option value="out" selected>Direction</option>
		<option value="in">In</option>
		<option value="out">Out</option>
		<option value="in-out">In-Out</option>
	</select>
	<div>
		<input type="range" style="width: 150px; margin-right: 1em;" min="0" max="2" step="0.05" value="0.5" onchange="tween_duration"/> 
		Duration <span id="duration">0.50</span> s
	</div>
	
	<h1>Cube</h1>
	<p>The cube is transformed and animated entirely in RCSS using the @keyframes at-rule.</p>
	<div class="cube_container">
		<div class="cube">
			<div class="face back">6</div>
			<div class="face top">5</div>
			<div class="face left">4</div>
			<div class="face bottom">3</div>
			<div class="face right">2</div>
			<div class="face front">1</div>
		</div>
	</div>
</panel>
<tab>Forms</tab>
<panel id="controls" class="minipanel">
	<form onsubmit="submit_form">
		<h2>Full name</h2>
		<div>
			<input type="text" size="20" name="name"/>
		</div>
		<h2>Email and password</h2>
		<div>
			<input type="text" size="10" name="email"/>
			<input type="password" size="10" name="password"/>
		</div>
		<h2>Favorite animal</h2>
		<div>
			<input type="radio" name="animal" value="dog" checked/> Dog
			<input type="radio" name="animal" value="cat"/> Cat
			<input type="radio" name="animal" value="narwhal"/> Narwhal
			<input type="radio" name="animal" value="no"/> I don't like animals
		</div>
		<h2>Favorite meals</h2>
		<div>
			<input type="checkbox" name="meals" value="pizza" checked/> Pizza
			<input type="checkbox" name="meals" value="pasta" checked/> Pasta
			<input type="checkbox" name="meals" value="lasagne" checked/> Lasagne
		</div>
		<h2>Rating</h2>
		<div>
			<input type="range" name="rating" min="0" max="100" step="1" value="50" onchange="rating"/> <span id="rating"/><span id="rating_emoji">&nbsp;</span>
		</div>
		<h2>Subject</h2>
		<div>
			<select name="subject">
				<option value="none" selected>Choose your subject</option>
				<option value="feature">Feature request</option>
				<option value="bug">Bug report</option>
				<option value="praise">Praise</option>
				<option value="criticism">Criticism</option>
			</select>
		</div>
		<h2>Message</h2>
		<div>
			<textarea cols="30" rows="5" wrap="nowrap" name="message">üòç Hello üåê World! üòé</textarea>
		</div>
		<div style="margin-bottom: 15px;">
			<input type="submit">Submit</input>
		</div>
		<h2>Form output</h2>
		<div id="form_output"></div>
	</form>
</panel>
<tab>Sandbox</tab>
<panel id="sandbox">
	<textarea id="sandbox_rml_source" wrap="nowrap" onchange="set_sandbox_body"></textarea>
	<textarea id="sandbox_rcss_source" wrap="nowrap" onchange="set_sandbox_style"></textarea>
	<div id="sandbox_target"></div>
</panel>
</tabset>
</body>
</rml>
