sudo: false
dist: trusty

matrix:
  include:
    - os: osx
      osx_image: xcode10.2
      env: ARCH=OSX
      language: c++
      compiler: clang
    - os: linux
      language: c++
      compiler: clang
      env: ARCH=x86_64 CC=clang
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - libstdc++-7-dev
            - cmake
            - build-essential
            - libboost-dev
            - libboost-python-dev
            - libsdl2-dev
            - libsdl2-image-dev
            - libfreetype6-dev
            - libsfml-dev
            - liblua5.2-dev
    - os: linux
      language: c++
      compiler: gcc
      env: ARCH=x86_64 CC=gcc
      addons:
        apt:
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - cmake
            - build-essential
            - libboost-dev
            - libboost-python-dev
            - libsdl2-dev
            - libsdl2-image-dev
            - libfreetype6-dev
            - libsfml-dev
            - liblua5.2-dev

install:
  - if [[ "$CC" == "clang" ]]; then export CC=clang-6.0 CXX=clang++-6.0; fi
  - if [[ "$CC" == "gcc" ]]; then export CC=gcc-7 CXX=g++-7; fi
  - if [[ "$ARCH" == "OSX" ]]; then export CC=clang CXX=clang++; fi
  - cd "$TRAVIS_BUILD_DIR/Build"
  - if [[ "$ARCH" == "x86_64" ]]; then cmake -DBUILD_LUA_BINDINGS=ON -DBUILD_SAMPLES=ON .; fi
  - if [[ "$ARCH" == "OSX" ]]; then cmake -G Xcode .; fi
  - cd "$TRAVIS_BUILD_DIR"

script:
  - cd Build
  - if [[ "$ARCH" == "x86_64" ]]; then make -j4; fi
  - if [[ "$ARCH" == "OSX" ]]; then xcodebuild -project librocket.xcodeproj/ -jobs 4 -configuration Release -target ALL_BUILD; fi
